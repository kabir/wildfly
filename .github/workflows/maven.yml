# Do not edit this file directly!!!
# Instead edit the template file, and use the generator to create it.
# The generator is at https://github.com/kabir/yaml-alias-expander/releases

name: Java CI
'on':
- push
env:
  MAVEN_OPTS: -Xms756M -Xmx1g
  MAVEN_TEST_PARAMS: -Dmaven.test.failure.ignore=true -DfailIfNoTests=false -Dipv6
    -Djboss.test.transformers.eap -Dci-cleanup=true -fae
jobs:
  build:
    name: Build Server
    runs-on: ubuntu-latest
    env:
      MAVEN_BUILD_PARAMS: -DskipTests -Dmaven.test.failure.ignore=true -DfailIfNoTests=false
        -Djboss.test.transformers.eap -Dci-cleanup=true -DlegacyBuild -DlegacyRelease
        -fae
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: |
        mvn -B install ${MAVEN_BUILD_PARAMS}
        # Build everything so it is cached
        mvn -B install -DallTests -rf testsuite -DskipTests
  ts-smoke:
    name: Unit and Smoke Tests
    runs-on: ubuntu-latest
    needs:
    - build
    env:
      TEST_MODULES: -rf testsuite/integration/smoke -Dts.integ.group.smoke
      ARTIFACT_NAME: ci-artifacts-unit-smoke
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package ${MAVEN_TEST_PARAMS}
    - name: Zip Artifacts
      run: zip -R artifacts.zip 'server.log' 'surefire-reports/*.txt' 'surefire-reports/*.xml'
    - uses: actions/upload-artifact@v1
      with:
        name: ${{env.ARTIFACT_NAME}}
        path: artifacts.zip
  ts-microprofile:
    name: Testsuite Microprofile
    runs-on: ubuntu-latest
    needs:
    - build
    env:
      RESUME_MODULE: testsuite/integration/microprofile
      TEST_MODULES: -Dinteg.module -Dts.microprofile
      ARTIFACT_NAME: ci-artifacts-microprofile
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: |
        mvn -B install -pl build,dist -DskipTests
        mvn -B install ${MAVEN_TEST_PARAMS} ${TEST_MODULES} -rf ${RESUME_MODULE}
    - name: Zip Artifacts
      run: zip -R artifacts.zip 'server.log' 'surefire-reports/*.txt' 'surefire-reports/*.xml'
    - uses: actions/upload-artifact@v1
      with:
        name: ${{env.ARTIFACT_NAME}}
        path: artifacts.zip
  ts-domain:
    name: Testsuite Domain
    runs-on: ubuntu-latest
    needs:
    - build
    env:
      RESUME_MODULE: testsuite/domain
      TEST_MODULES: -Dts.domain
      ARTIFACT_NAME: ci-artifacts-domain
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: |
        mvn -B install -pl build,dist -DskipTests
        mvn -B install ${MAVEN_TEST_PARAMS} ${TEST_MODULES} -rf ${RESUME_MODULE}
    - name: Zip Artifacts
      run: zip -R artifacts.zip 'server.log' 'surefire-reports/*.txt' 'surefire-reports/*.xml'
    - uses: actions/upload-artifact@v1
      with:
        name: ${{env.ARTIFACT_NAME}}
        path: artifacts.zip
