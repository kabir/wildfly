# https://medium.com/@kinghuang/docker-compose-anchors-aliases-extensions-a1e4105d70bd is good
# rework the generator to ignore fields starting with x-
x-checkout: &checkout-step
  uses: actions/checkout@v2

x-cache-maven-repo: &cache-maven-repo-step
  uses: actions/cache@v1
  with:
    path: ~/.m2/repository
    key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
    restore-keys: |
      ${{ runner.os }}-maven-

x-jdk-setup: &jdk-setup-step
  name: Set up JDK 1.8
  uses: actions/setup-java@v1
  with:
    java-version: 1.8

x-testsuite-maven-command: &testsuite-maven-command
  name: Build with Maven
  run: |
    mvn -B install -pl build,dist -DskipTests
    mvn -B install ${MAVEN_TEST_PARAMS} ${TEST_MODULE_PARAMS}

x-zip-testsuite-artifacts: &zip-testsuite-artifacts
  name: Zip Artifacts
  run: zip -R artifacts.zip 'server.log' 'surefire-reports/*.txt' 'surefire-reports/*.xml'

x-upload-testsuite-artifact: &upload-testsuite-artifacts
  uses: actions/upload-artifact@v1
  with:
    name: ${{env.ARTIFACT_NAME}}
    path: artifacts.zip

x-run-testsuite-section: &run-testsuite-section
  steps:
    - <<: *checkout-step
    - <<: *cache-maven-repo-step
    - <<: *jdk-setup-step
    - <<: *testsuite-maven-command
    - <<: *zip-testsuite-artifacts
    - <<: *upload-testsuite-artifacts

name: Java CI
# On needs quoting, or it gets changed into a Boolean.TRUE
"on":
  - push
env:
  MAVEN_OPTS: "-Xms756M -Xmx1g"
  MAVEN_TEST_PARAMS: "-Dmaven.test.failure.ignore=true -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap -Dci-cleanup=true -fae"
jobs:
  build:
    name: Build Server
    runs-on: ubuntu-latest
    env:
      # Here we skip the tests for quick building in the 'Build' step
      MAVEN_BUILD_PARAMS: "-DskipTests -Dmaven.test.failure.ignore=true -DfailIfNoTests=false -Djboss.test.transformers.eap -Dci-cleanup=true -DlegacyBuild -DlegacyRelease -fae"
    steps:
      - <<: *checkout-step
      - <<: *cache-maven-repo-step
      - <<: *jdk-setup-step
      - name: Build with Maven
        run: |
          mvn -B install ${MAVEN_BUILD_PARAMS}
          # Build everything so it is cached
          mvn -B install -DallTests -rf testsuite -DskipTests

  ts-smoke:
    name: Unit and Smoke Tests
    runs-on: ubuntu-latest
    needs: [build]
    env:
      ARTIFACT_NAME: ci-artifacts-unit-smoke
    steps:
      - <<: *checkout-step
      - <<: *cache-maven-repo-step
      - <<: *jdk-setup-step
      # This is different from the other testsuite build steps in that we want to build everything up to the smoke tests
      # so we run the unit tests and smoke tests
      - name: Build with Maven
        run: mvn -B package ${MAVEN_TEST_PARAMS}
      - <<: *zip-testsuite-artifacts
      - <<: *upload-testsuite-artifacts


  ts-basic:
    name: Testsuite Basic
    runs-on: ubuntu-latest
    needs: [build]
    env:
      TEST_MODULE_PARAMS: "-Dts.basic -pl testsuite/integration/basic/,testsuite/integration/ws/"
      ARTIFACT_NAME: ci-artifacts-basic
    <<: *run-testsuite-section

  ts-clustering:
    name: Testsuite Clustering
    runs-on: ubuntu-latest
    needs: [build]
    env:
      TEST_MODULE_PARAMS: "-Dts.clustering -rf testsuite/integration/clustering/"
      ARTIFACT_NAME: ci-artifacts-clustering
    <<: *run-testsuite-section

  ts-domain:
    name: Testsuite Domain
    runs-on: ubuntu-latest
    needs: [build]
    env:
      TEST_MODULE_PARAMS: "-Dts.domain -rf testsuite/domain"
      ARTIFACT_NAME: ci-artifacts-domain
    <<: *run-testsuite-section

  ts-elytron:
    name: Testsuite Elytron
    runs-on: ubuntu-latest
    needs: [build]
    env:
      TEST_MODULE_PARAMS: "-Dinteg.module -Dts.elytron -rf testsuite/integration/elytron"
      ARTIFACT_NAME: ci-artifacts-elytron
    <<: *run-testsuite-section

  ts-iiop:
    name: Testsuite IIOP
    runs-on: ubuntu-latest
    needs: [build]
    env:
      TEST_MODULE_PARAMS: "-Dts.iiop -rf testsuite/integration/iiop"
      ARTIFACT_NAME: ci-artifacts-iiop
    <<: *run-testsuite-section

  ts-legacy:
    name: Testsuite Legacy
    runs-on: ubuntu-latest
    needs: [build]
    env:
      TEST_MODULE_PARAMS: "-Dts.legacy -rf testsuite/integration/legacy"
      ARTIFACT_NAME: ci-artifacts-legacy
    <<: *run-testsuite-section

  ts-legacy-ejb-client:
    name: Testsuite Legacy EJB Client
    runs-on: ubuntu-latest
    needs: [build]
    env:
      TEST_MODULE_PARAMS: "-Dts.legacy.ejb.client -rf testsuite/integration/legacy-ejb-client"
      ARTIFACT_NAME: ci-artifacts-legacy-ejb-client
    <<: *run-testsuite-section

  ts-manualmode:
    name: Testsuite ManualMode
    runs-on: ubuntu-latest
    needs: [build]
    env:
      TEST_MODULE_PARAMS: "-Dts.manualmode -rf testsuite/integration/manualmode/"
      ARTIFACT_NAME: ci-artifacts-manualmode
    <<: *run-testsuite-section

  ts-microprofile:
    name: Testsuite Microprofile
    runs-on: ubuntu-latest
    needs: [build]
    env:
      TEST_MODULE_PARAMS: "-Dinteg.module -Dts.microprofile -rf testsuite/integration/microprofile"
      ARTIFACT_NAME: ci-artifacts-microprofile
    <<: *run-testsuite-section

  ts-multimode:
    name: Testsuite MultiNode
    runs-on: ubuntu-latest
    needs: [build]
    env:
      TEST_MODULE_PARAMS: "-Dts.multinode -rf testsuite/integration/multinode"
      ARTIFACT_NAME: ci-artifacts-multinode
    <<: *run-testsuite-section

  ts-rbac:
    name: Testsuite RBAC
    runs-on: ubuntu-latest
    needs: [build]
    env:
      TEST_MODULE_PARAMS: "-Dts.rbac -rf testsuite/integration/rbac"
      ARTIFACT_NAME: ci-artifacts-rbac
    <<: *run-testsuite-section

  ts-rts:
    name: Testsuite RTS
    runs-on: ubuntu-latest
    needs: [build]
    env:
      TEST_MODULE_PARAMS: "-Dts.rts -rf testsuite/integration/rts"
      ARTIFACT_NAME: ci-artifacts-rts
    <<: *run-testsuite-section

  ts-secman:
    name: Testsuite SecMan
    runs-on: ubuntu-latest
    needs: [build]
    env:
      TEST_MODULE_PARAMS: "-Dts.secman -rf testsuite/integration/secman"
      ARTIFACT_NAME: ci-artifacts-secman
    <<: *run-testsuite-section

  ts-vdx:
    name: Testsuite VDX
    runs-on: ubuntu-latest
    needs: [build]
    env:
      TEST_MODULE_PARAMS: "-pl testsuite/integration/vdx -DallTests"
      ARTIFACT_NAME: ci-artifacts-vdx
    <<: *run-testsuite-section

  ts-xts:
    name: Testsuite XTS
    runs-on: ubuntu-latest
    needs: [build]
    env:
      TEST_MODULE_PARAMS: "-Dts.xts -rf testsuite/integration/xts"
      ARTIFACT_NAME: ci-artifacts-xts
    <<: *run-testsuite-section





